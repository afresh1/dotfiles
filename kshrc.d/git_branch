git_branch() {
    local _branch=$(git branch --no-color 2> /dev/null | sed -ne 's/^* //p')
    [ "$_branch" ] || return

    local _bgcolor
    local _color

    for s in $(git status -uno --porcelain | tr ' ' '.' | cut -c 1-2); do
        if [ ! "$_color" ]; then
            case "$s" in
               ?D)  _color='\e[31m' ;;
               ?M)  _color='\e[36m' ;;
               ?\?) _color='\e[33m' ;;
            esac
        fi
        if [ ! "$_bgcolor" ]; then
            case $s in
               A?) _bgcolor='\e[43m' ;;
               D?) _bgcolor='\e[41m' ;;
               M?) _bgcolor='\e[46m' ;;
               R?) _bgcolor='\e[45m' ;;
            esac
        fi
        #echo -n "\n$s [${_color#\\}][${_bgcolor#\\}]"
    done

    # Default color for all's well
    _color=${_color:-'\e[32m'}
    #_bgcolor=${_bgcolor:-'\e[42m'}

    # Bold the color if we have a background color
    [ "$_color" -a "$_bgcolor" ] && _color="${_color%m};1m"

    local now=$(date +%s)
    local last_pull=$now
    local fetch_head=$( git rev-parse --show-toplevel )/.git/FETCH_HEAD 
    [ -e $fetch_head ] && last_pull=$(stat -c%Y $fetch_head 2>/dev/null || stat -f%m $fetch_head)
    age=$(( $now - $last_pull ))

    if [ $age -gt 86400 ]; then
        _color='\e[5m'$_color
        #_color='\e[37m'
        #_bgcolor='\e[41;1m';
    fi

    if [ "${KSH_VERSION%*PD KSH}" != "$KSH_VERSION" ]; then
        echo -en "\[\e[0m\]{\[$_bgcolor$_color\]${_branch}\[\e[0m\]}"
    else
        echo -en "\e[0m{$_bgcolor$_color${_branch}\e[0m}"
    fi
}
